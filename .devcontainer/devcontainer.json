// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
	"name": "Ubuntu",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:jammy",

	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/meaningful-ooo/devcontainer-features/homebrew:2": {},
		// "ghcr.io/devcontainers/features/azure-cli:1": {
		// 	"version": "latest"
		// },
		"ghcr.io/devcontainers/features/conda:1": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/pipx-package:1": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/cookiecutter:2": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/bandit:2": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/tmux-homebrew:1": {
			"version": "latest"
		},
		"ghcr.io/devcontainers-contrib/features/neovim-homebrew:1": {
			"version": "latest"
		},
		"ghcr.io/eitsupi/devcontainer-features/jq-likes:1": {
			"jqVersion": "latest",
			"yqVersion": "latest",
			"gojqVersion": "none",
			"xqVersion": "none",
			"jaqVersion": "none"
		},
		// "ghcr.io/devcontainers/features/terraform:1": {
		// 	"version": "latest",
		// 	//"tflint": "latest",
		// 	//"terragrunt": "latest",
		// 	//"installSentinel": false,
		// 	"installTFsec": true,
		// 	//"installTerraformDocs": true
		// }
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				// Azure
				// "ms-vscode.vscode-node-azure-pack",
				// "ms-vscode.azure-account",
				// "DurableFunctionsMonitor.durablefunctionsmonitor",
				// "ms-azuretools.vscode-azureresourcegroups",
				// "Azurite.azurite",

				// Terraform
				// "hashicorp.terraform",
				// "ms-azuretools.vscode-azureterraform",
				// "azapi-vscode.azapi",


				// Docker
				"ms-azuretools.vscode-docker",

				// Python
				"ms-python.python",
				"ms-python.vscode-pylance",
				"charliermarsh.ruff",
				"ms-python.black-formatter",
				//"ms-python.pylint",
				//"KevinRose.vsc-python-indent",

				"ms-toolsai.jupyter",
				"jithurjacob.nbpreviewer",


				// Git
				"eamodio.gitlens",
				"donjayamanne.githistory",
				"GitHub.vscode-pull-request-github",
				"github.vscode-github-actions",
				//"GitHub.remotehub",

				// Databases / SQL
				// "mtxr.sqltools",

				// Other tools
				"njpwerner.autodocstring",
				//"cschlosser.doxdocgen",
				//"jebbs.plantuml",
				"streetsidesoftware.code-spell-checker",
				"alefragnani.Bookmarks",

				"humao.rest-client",
				"DavidAnson.vscode-markdownlint",
				"redhat.vscode-yaml",

				// Microsoft / VSCode
				"VisualStudioExptTeam.vscodeintellicode",
				"VisualStudioExptTeam.intellicode-api-usage-examples",
				"ms-dotnettools.vscode-dotnet-runtime",
				"ms-vsliveshare.vsliveshare",
				"ms-vsliveshare.vsliveshare-pack",
				"spmeesseman.vscode-taskexplorer",

				"ms-vscode-remote.vscode-remote-extensionpack",
				"ms-vscode.remote-explorer",
				"ms-vscode.remote-repositories"
			]
		}
	},

	// Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"

	// "mounts": [
	// 	{ "source": "${localEnv:USERPROFILE}/.ssh", "target": "/home/vscode/.ssh" }
	// ]

	// "mounts": [
	// 	"type=bind,source=${localEnv:USERPROFILE}/.ssh,target=/home/vscode/.ssh,readonly",
	// ],
}
